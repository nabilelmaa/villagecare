-- Users table
CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    first_name VARCHAR(100) NOT NULL,
    last_name VARCHAR(100) NOT NULL,
    email VARCHAR(255) UNIQUE NOT NULL,
    password VARCHAR(255) NOT NULL,
    phone_number VARCHAR(20),
    city TEXT,
    bio TEXT,
    gender VARCHAR(10);
    profile_image_url VARCHAR(255),
    rating DECIMAL(3, 2),
    review_count INTEGER DEFAULT 0,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- Services table
CREATE TABLE services (
    id SERIAL PRIMARY KEY,
    name VARCHAR(100) NOT NULL UNIQUE,
    description TEXT,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- User-Service relationship (for volunteers offering services)
CREATE TABLE user_services (
    id SERIAL PRIMARY KEY,
    user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
    service_id INTEGER REFERENCES services(id) ON DELETE CASCADE,
    selected BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- Availability table
CREATE TABLE availability (
    id SERIAL PRIMARY KEY,
    user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
    day_of_week VARCHAR(10) NOT NULL CHECK (day_of_week IN ('monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday')),
    time_of_day VARCHAR(10) NOT NULL CHECK (time_of_day IN ('morning', 'afternoon', 'evening')),
    UNIQUE (user_id, day_of_week, time_of_day)
);

-- Service requests
CREATE TABLE requests (
  id SERIAL PRIMARY KEY,
  elder_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
  volunteer_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
  service_id INTEGER REFERENCES services(id) ON DELETE SET NULL,
  day_of_week VARCHAR(20) NOT NULL,
  time_of_day VARCHAR(20) NOT NULL,
  details TEXT,
  urgent BOOLEAN DEFAULT FALSE,
  status VARCHAR(20) DEFAULT 'pending',
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);


-- Reviews
CREATE TABLE reviews (
  id SERIAL PRIMARY KEY,
  elder_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
  volunteer_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
  rating INTEGER CHECK (rating BETWEEN 1 AND 5) NOT NULL,
  comment TEXT,
  created_at TIMESTAMP DEFAULT NOW()
);

CREATE TABLE favorite_volunteers (
  id SERIAL PRIMARY KEY,
  elder_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
  volunteer_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
  created_at TIMESTAMP DEFAULT NOW(),
  UNIQUE (elder_id, volunteer_id)
);

-- Notifications
CREATE TABLE notifications (
  id SERIAL PRIMARY KEY,
  user_id SERIAL NOT NULL,
  type TEXT NOT NULL,
  message TEXT NOT NULL,
  is_read BOOLEAN DEFAULT FALSE,
  created_at TIMESTAMP DEFAULT NOW(),
  FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);

-- Create indexes for performance
CREATE INDEX idx_requests_elder_id ON requests(elder_id);
CREATE INDEX idx_requests_volunteer_id ON requests(volunteer_id);
CREATE INDEX idx_requests_status ON requests(status);
CREATE INDEX idx_notifications_user_id ON notifications(user_id);
CREATE INDEX idx_reviews_volunteer_id ON reviews(volunteer_id);

-- Inserting some data
INSERT INTO services (name, created_at, updated_at)
VALUES 
  ('Walks', NOW(), NOW()),
  ('Meal Preparation', NOW(), NOW()),
  ('Healthcare Support', NOW(), NOW()),
  ('Grocery Shopping', NOW(), NOW()),
  ('Transportation', NOW(), NOW()),
  ('Friendly Conversation', NOW(), NOW());

-- INSERT INTO availability (user_id, day_of_week, time_of_day)
-- VALUES
--  ('7', 'monday', 'morning'),
--  ('7', 'monday', 'afternoon'),
--  ('7', 'tuesday', 'evening');